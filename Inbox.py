from os import path
from pickle import *

import vk_api.vk_api

from Keyboards import *
from Process import *


class Inbox:
    def __init__(self, session, event, base, stat):
        self.base = base
        self.stat = stat
        self.vk = session
        self.upload = vk_api.VkUpload(self.vk)
        self.vk_api = self.vk.get_api()

        self.admins = [222383631, 66061219, 223632391, 231483322]
        self.console_id = 2000000001

        self.user_commands = ['—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏']
        self.conference_commands = ['!—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '!–æ–±—â–µ–µ', '!–∫–ª–∞—Å—Å']

        self.nums = [str(i) for i in range(5, 12)]
        self.literas = ['–∞', '–±', '–≤', '–≥']
        self.classes = ['5–ê', '5–ë', '5–í', '5–ì', '6–ê', '6–ë', '6–í', '7–ê',
                        '7–ë', '7–í', '8–ê', '8–ë', '8–í', '9–ê', '9–ë', '9–í',
                        '10–ê', '10–ë', '10–í', '10–ì', '11–ê', '11–ë', '11–í',
                        '11–ì']

        self.peer_id = event.obj.peer_id
        if self.peer_id == self.console_id:
            self.console(event)
        elif self.peer_id >= 2000000000 and self.peer_id != self.console_id:
            self.from_id = event.obj.from_id
            self.conference(event)
        elif self.peer_id in self.admins:
            self.user(event, True)
        else:
            self.user(event)

    def user(self, event, a=False):
        u_id = self.peer_id
        name, last = self.u_get(u_id)
        msg = event.obj.text.lower()
        if u_id not in self.admins:
            self.send_msg(self.console_id, f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: @id{u_id}({name} {last})\n'
                                           f'{event.obj.text}')
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if u_id not in self.base.keys():
            self.base.update({u_id: [name, last, 'Ns']})
            self.stat['users'] = self.stat.get('users', 0) + 1
            self.write_base()
            self.send_msg(u_id, f'–ü—Ä–∏–≤–µ—Ç, {name}! –î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º –±–æ—Ç–∞ –ø–æ–¥ —Ç–µ–±—è. –¢–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ '
                                f'—É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –∫–ª–∞—Å—Å')
            self.send_msg(self.console_id, f'–ù–æ–≤—ã–π —é–∑–µ—Ä!\n–í—Å—Ç—Ä–µ—á–∞–π—Ç–µ - @id{u_id}({name} {last})')
            Keyboards(self.vk_api).class_keyboard(u_id)
        else:
            # –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞:
            if msg in self.nums:
                self.base[u_id][2] = msg
                self.write_base()
                if msg in ['5', '10', '11']:
                    Keyboards(self.vk_api).litera_keyboard(u_id, True)
                else:
                    Keyboards(self.vk_api).litera_keyboard(u_id, False)
            # –í—ã–±–æ—Ä –ª–∏—Ç–µ—Ä—ã:
            elif msg in self.literas:
                self.base[u_id][2] += msg
                self.write_base()
                self.send_msg(u_id, f'–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ {self.base[u_id][2].upper()} –∫–ª–∞—Å—Å! '
                                    f'–≠—Ç–æ—Ç –≤—ã–±–æ—Ä –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö')
                if a:
                    Keyboards(self.vk_api).admin_keyboard(u_id)
                else:
                    Keyboards(self.vk_api).menu_keyboard(u_id)
            # –ü–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∫–ª–∞—Å—Å–∞:
            elif msg == '–±–µ–∑ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞':
                self.base[u_id][2] = ''
                self.write_base()
                self.send_msg(u_id, 'üôÅ –ë–µ–∑ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞ –Ω–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª. –ù–æ '
                                    '–µ–≥–æ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö üòâ')
                Keyboards(self.vk_api).menu_keyboard(u_id, False)
            # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
            elif msg == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
                self.stat['requests'] = self.stat.get('requests', 0) + 1
                self.write_base()
                if path.exists(f'{get_date()}/{self.base[u_id][2].upper()}.jpg'):
                    self.photo(u_id, f'{get_date()}/{self.base[u_id][2].upper()}.jpg',
                               f'–î–µ—Ä–∂–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
                               f'{self.base[u_id][2].upper()} '
                               f'–∫–ª–∞—Å—Å–∞ –Ω–∞ {get_date()} ‚ò∫')
                else:
                    self.send_msg(u_id, f'–°–µ–π—á–∞—Å –ø–æ–ø—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {get_date()} '
                                        f'üòâ\n–ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥, —Ç–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, '
                                        f'–≤—Å–µ –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É!')
                    SF()
                    try:
                        self.photo(u_id, f'{get_date()}/{self.base[u_id][2].upper()}.jpg',
                                   f'–î–µ—Ä–∂–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ {self.base[u_id][2].upper()} '
                                   f'–∫–ª–∞—Å—Å–∞ –Ω–∞ {get_date()} ‚ò∫')
                    except:
                        self.send_msg(u_id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò≤\n–Ø –Ω–µ –Ω–∞—à–µ–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
                                            f' {self.base[u_id][2].upper()} –∫–ª–∞—Å—Å–∞ –Ω–∞ '
                                            f'{get_date()} üò∞')
            # –û–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
            elif msg == '–æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
                if not path.exists(f'source/{get_date()}.png'):
                    get_picture(get_date(), '1')
                self.photo(u_id, f'source/{get_date()}.png', f'–î–µ—Ä–∂–∏ –æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
                                                             f' –Ω–∞ {get_date()} üòä')
            elif msg == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
                Keyboards(self.vk_api).service_keyboard(u_id)
            elif msg == '—Å–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å':
                Keyboards(self.vk_api).class_keyboard(u_id)
            elif msg == '–Ω–∞–∑–∞–¥':
                if a:
                    Keyboards(self.vk_api).admin_keyboard(u_id)
                else:
                    Keyboards(self.vk_api).menu_keyboard(u_id)
            elif msg == '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
                if u_id in self.admins:
                    u = '–°–ø–∏—Å–æ–∫ —é–∑–µ—Ä–æ–≤:\n'
                    for i in self.base.keys():
                        if i < 2000000001:
                            u += f'@id{i}({self.base[i][0]} {self.base[i][1]}) - ' \
                                 f'{self.base[i][2].upper()}\n'
                        else:
                            u += f'–ë–µ—Å–µ–¥–∞ {i} - {self.base[i].upper()}\n'
                    self.send_msg(u_id, u)
                else:
                    self.send_msg(u_id, '–ê —Ç—ã —Ç–æ—á–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä? üôÉ\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                        '—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!')
            elif msg == '–∑–∞–≥—Ä—É–∑–∏—Ç—å':
                if u_id in self.admins:
                    if path.exists(f'{get_date()}'):
                        self.send_msg(u_id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!')
                    else:
                        self.send_msg(u_id, f'–ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –•–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '
                                            f'–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏.')
                        SF()
                else:
                    self.send_msg(u_id, '–ê —Ç—ã —Ç–æ—á–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä? üôÉ\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                        '—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!')
            elif msg == '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
                if u_id in self.admins:
                    self.send_msg(u_id, f'–ß–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: '
                                        f'{self.stat["requests"]}\n–ß–∏—Å–ª–æ —é–∑–µ—Ä–æ–≤: '
                                        f'{self.stat["users"]}')
                else:
                    self.send_msg(u_id, '–ê —Ç—ã —Ç–æ—á–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä? üôÉ\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                        '—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!')
            elif msg == '–æ–±–Ω–æ–≤–∏—Ç—å':
                if u_id in self.admins:
                    SF()
                else:
                    self.send_msg(u_id, '–ê —Ç—ã —Ç–æ—á–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä? üôÉ\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                        '—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!')
            elif '–æ–±—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ª—Å' in msg:
                ms = msg[18:]
                print(ms)
                for i in self.base.keys():
                    if i < 2000000000:
                        self.send_msg(i, ms)
            elif '–æ–±—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ' in msg:
                ms = msg[19:]
                print(ms)
                for i in self.base.keys():
                    self.send_msg(i, ms)

    def console(self, event):
        msg = event.obj.text.lower()
        if msg == '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
            u = '–°–ø–∏—Å–æ–∫ —é–∑–µ—Ä–æ–≤:\n'
            for i in self.base.keys():
                if i < 2000000001:
                    u += f'@id{i}({self.base[i][0]} {self.base[i][1]}) - ' \
                         f'{self.base[i][2].upper()}\n'
                else:
                    u += f'–ë–µ—Å–µ–¥–∞ {i} - {self.base[i][2].upper()}\n'
            self.send_msg(self.console_id, u)
        elif msg == '–∑–∞–≥—Ä—É–∑–∏—Ç—å':
            if path.exists(f'{get_date()}'):
                self.send_msg(self.console_id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!')
            else:
                self.send_msg(self.console_id, f'–ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –•–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '
                                               f'–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏.')
                SF()
                self.send_msg(self.console_id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {get_date()} –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –û—à–∏–±–∫–∏ '
                                               f'–≤—ã—à–µ')
        elif msg == '–æ–±–Ω–æ–≤–∏—Ç—å':
            SF()
            self.send_msg(self.console_id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {get_date()} –æ–±–Ω–æ–≤–ª–µ–Ω–æ!')
        elif msg == '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
            self.send_msg(self.console_id, f'–ß–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: '
                                           f'{self.stat["requests"]}\n–ß–∏—Å–ª–æ —é–∑–µ—Ä–æ–≤: '
                                           f'{self.stat["users"]}')
        elif '–æ–±—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ª—Å' in msg:
            ms = msg[18:]
            print(ms)
            for i in self.base.keys():
                if i < 2000000000:
                    self.send_msg(i, ms)
        elif '–æ–±—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ' in msg:
            ms = msg[19:]
            print(ms)
            for i in self.base.keys():
                self.send_msg(i, ms)

    def conference(self, event):
        id_c = self.peer_id
        msg = event.obj.text.lower()
        if id_c not in self.base.keys():
            self.base.update({id_c: ''})
            self.write_base()
            self.send_msg(id_c, '–ü—Ä–∏–≤–µ—Ç!\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –º–µ–Ω—è –≤ –±–µ—Å–µ–¥—É!\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å '
                                '–∫–æ–º–∞–Ω–¥–æ–π "!–∫–ª–∞—Å—Å <–∫–ª–∞—Å—Å>", —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –∫–ª–∞—Å—Å\n–ö–æ–º–∞–Ω–¥–∞ "!–æ–±—â–µ–µ"'
                                '–ø—Ä–∏—à–ª–µ—Ç –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
        else:
            if msg in self.conference_commands or '!–∫–ª–∞—Å—Å' in msg:
                if msg == '!—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
                    if self.base[id_c]:
                        self.stat['requests'] = self.stat.get('requests', 0) + 1
                        self.write_base()
                        if path.exists(f'{get_date()}/{self.base[id_c].upper()}.jpg'):
                            self.photo(id_c, f'{get_date()}/{self.base[id_c].upper()}.jpg',
                                       f'–î–µ—Ä–∂–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ '
                                       f'{self.base[id_c].upper()} '
                                       f'–∫–ª–∞—Å—Å–∞ –Ω–∞ {get_date()} ‚ò∫')
                        else:
                            self.send_msg(id_c, f'–°–µ–π—á–∞—Å –ø–æ–ø—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {get_date()} '
                                                f'üòâ\n–ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥, —Ç–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, '
                                                f'–≤—Å–µ –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É!')
                            SF()
                            try:
                                self.photo(id_c, f'{get_date()}/{self.base[id_c].upper()}.jpg',
                                           f'–î–µ—Ä–∂–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ {self.base[id_c].upper()} '
                                           f'–∫–ª–∞—Å—Å–∞ –Ω–∞ {get_date()} ‚ò∫')
                            except:
                                self.send_msg(id_c, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò≤\n–Ø –Ω–µ –Ω–∞—à–µ–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
                                                    f' {self.base[id_c].upper()} –∫–ª–∞—Å—Å–∞ –Ω–∞ '
                                                    f'{get_date()} üò∞')
                    else:
                        self.send_msg(id_c, '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–ª–∞—Å—Å!\n–ö–ª–∞—Å—Å –∑–∞–¥–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π'
                                            '"!–∫–ª–∞—Å—Å <–∫–ª–∞—Å—Å>"\n–ù–∞–ø—Ä–∏–º–µ—Ä - !–∫–ª–∞—Å—Å 8–≤')
                elif msg == '!–æ–±—â–µ–µ':
                    if not path.exists(f'source/{get_date()}.png'):
                        get_picture(get_date(), '1')
                    self.photo(id_c, f'source/{get_date()}.png', f'–î–µ—Ä–∂–∏—Ç–µ –æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
                                                                 f' –Ω–∞ {get_date()} üòä')
                else:
                    cls = msg.lstrip('!–∫–ª–∞—Å—Å ').upper()
                    if cls in self.classes:
                        self.base.update({id_c: cls})
                        self.write_base()
                        self.send_msg(id_c, f'–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ {cls} –∫–ª–∞—Å—Å! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ '
                                            f'–≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π "!—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"')
                    else:
                        self.send_msg(id_c, f'–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–ª–∞—Å—Å–∞ "{cls}"! –ù–∞–ø–∏—à–∏—Ç–µ –≤ '
                                            f'—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–∞–∫: @id223632391('
                                            f'–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞)')

    def write_base(self):
        pt = 'data/base.pickle'
        with open(pt, 'wb') as fi:
            dump(self.base, fi)

        pt = 'data/stat.pickle'
        with open(pt, 'wb') as fi:
            dump(self.stat, fi)

    def open_base(self):
        pt = 'data/base.pickle'
        with open(pt, 'rb') as fi:
            self.base = load(fi)

        pt = 'data/stat.pickle'
        with open(pt, 'wb') as fi:
            self.stat = load(fi)

    def photo(self, send_id, root='img.jpg', msg=''):
        response = self.upload.photo_messages(root)[0]
        attachment = f'photo{response["owner_id"]}_{response["id"]}_{response["access_key"]}'
        self.vk_api.messages.send(peer_id=send_id,
                                  message=msg,
                                  random_id=get_random_id(),
                                  attachment=attachment)

    def send_msg(self, send_id, message):
        self.vk_api.messages.send(peer_id=send_id,
                                  message=message,
                                  random_id=get_random_id())

    def u_get(self, uid):
        info = self.vk_api.users.get(user_ids=uid)[0]
        return info['first_name'], info['last_name']

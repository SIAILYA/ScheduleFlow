from os import path, mkdir
from pickle import *
from random import randint

import vk_api.vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.utils import get_random_id

from Process import *


class Bot:
    def __init__(self):
        self.classes = ['5–ê', '5–ë', '5–í', '5–ì', '6–ê', '6–ë', '6–í', '7–ê',
                        '7–ë', '7–í', '8–ê', '8–ë', '8–í', '9–ê', '9–ë', '9–í',
                        '10–ê', '10–ë', '10–í', '10–ì', '11–ê', '11–ë', '11–í', '11–ì']
        self.vk = vk_api.VkApi(
            token='')
        self.long_poll = VkBotLongPoll(self.vk, group_id='187161295')
        self.vk_api = self.vk.get_api()
        self.upload = vk_api.VkUpload(self.vk)
        self.usr_cls = {}
        self.usrs = []

        if not path.exists('data'):
            mkdir('data')
            p = 'data/classes.pickle'
            f = open(p, 'wb')
            f.close()

            k = 'data/base.pickle'
            f = open(k, 'wb')
            f.close()
        else:
            try:
                p = 'data/classes.pickle'
                with open(p, 'rb') as f:
                    self.usr_cls = load(f)
            except:
                self.send_msg(2000000002, '1 - –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ç–µ—Ä–ª–∏—Å—å :)')
                self.usr_cls = {}
            try:
                k = 'data/base.pickle'
                with open(k, 'rb') as f:
                    self.usrs = load(f)
            except:
                self.send_msg(2000000002, '2 - –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ç–µ—Ä–ª–∏—Å—å :)')
                self.usrs = []

    def u_get(self, uid):
        info = self.vk_api.users.get(user_ids=uid)[0]
        return info['first_name'], info['last_name']

    def photo(self, send_id, root='img.jpg'):
        response = self.upload.photo_messages(root)[0]
        attachment = f'photo{response["owner_id"]}_{response["id"]}_{response["access_key"]}'
        self.vk_api.messages.send(peer_id=send_id,
                                  message='',
                                  random_id=randint(-1000,
                                                    1000),
                                  attachment=attachment)

    def send_msg(self, send_id, message):
        self.vk_api.messages.send(
            peer_id=send_id, message=message, random_id=randint(-1000, 1000))

    def keyb(self, p_id):
        if p_id not in self.usrs:
            keyboard = VkKeyboard(one_time=False)
            keyboard.add_button('!—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', color=VkKeyboardColor.DEFAULT)
            keyboard.add_button('!–ø–æ–ª–Ω–æ–µ', color=VkKeyboardColor.POSITIVE)
            keyboard.add_button('!–ø–æ–º–æ—â—å', color=VkKeyboardColor.NEGATIVE)
            self.vk_api.messages.send(peer_id=p_id, random_id=get_random_id(),
                                      keyboard=keyboard.get_keyboard(),
                                      message='üòâ')
            self.usrs.append(p_id)
            with open('data/base.pickle', 'wb') as fi:
                dump(self.usrs, fi)

    def main(self):
        for event in self.long_poll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW and event.obj.text:
                self.inbox(event)
            else:
                if event.obj.peer_id <= 2000000000:
                    self.send_msg(event.obj.peer_id,
                                  'üò° –ë–æ—Ç –Ω–µ —É–º–µ–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏, —Å—Ç–∏–∫–µ—Ä—ã –∏ '
                                  '–ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É '
                                  '–∏ –∫–æ–º–∞–Ω–¥—É "!–ø–æ–º–æ—â—å!"')

    def inbox(self, event):
        if event.obj.text[0] != '!':
            msg = event.obj.text.replace(' ', '').replace('"', '').upper()
        else:
            msg = event.obj.text.upper()
        p_id = event.obj.peer_id
        if p_id <= 2000000000:  # –î–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            name, last = self.u_get(p_id)
            self.keyb(p_id)
            print(f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: {name} {last}\n{event.obj.text}')
            try:
                if ',' not in msg:
                    date = get_date()
                else:
                    msg, date = msg.split(',')
                    d, m = [int(i) for i in date.split('.')]
                    if abs(d - pendulum.today().day) >= 100 and msg in self.classes:
                        date = get_date()
                        self.send_msg(p_id, f'–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å!\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date}:')
                    else:
                        date = pendulum.date(
                            pendulum.tomorrow().year, m, d).format('DD.MM.YYYY')
            except BaseException:
                date = get_date()
                self.send_msg(f'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date}:')

            if msg[0] != '!':
                if msg in self.classes:
                    if path.exists(f'{date}/{msg}.jpg'):
                        self.photo(p_id, f'{date}/{msg.upper()}.jpg')
                    else:
                        self.send_msg(p_id, '–ü—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–∫–∞—á–∞—Ç—å...\n–ï—Å–ª–∏ –≤—ã –∂–¥–µ—Ç–µ '
                                            '–±–æ–ª—å—à–µ 5 —Å–µ–∫—É–Ω–¥, —Ç–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –≤—Å–µ –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É!')
                        SF('all', date)
                        if path.exists(f'{date}/{msg.upper()}.jpg'):
                            self.send_msg(p_id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date} üòâ')
                            self.photo(p_id, f'{date}/{msg.upper()}.jpg')
                        else:
                            self.send_msg(p_id, f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å'
                                                f'–Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date} üò¨')
                else:
                    pass

        if msg in ['!–ü–û–ú–û–©–¨', '!–ö–û–ú–ê–ù–î–´', '!–°–ü–†–ê–í–ö–ê']:  # –û–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–≤ —Ç.—á. –∏ –∫–æ–Ω—Ñ—ã)
            self.send_msg(p_id, '‚ùì –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–ø—Ä–∞–≤–∫–∞\n\n'
                                '‚úÖ –ß—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞'
                                '(–ª–∏–±–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –µ—Å–ª–∏ –≤—Ä–µ–º—è –¥–æ 15:00),'
                                '–ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞ '
                                '–≤ —É–¥–æ–±–Ω–æ–π –¥–ª—è –≤–∞—Å —Ñ–æ—Ä–º–µ: 11–ê, 5–≥, 8"–í"\n\n'
                                ''
                                'üì¢ –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –±–µ—Å–µ–¥–µ, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å '
                                '–∫–æ–º–∞–Ω–¥–æ–π "!—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"\n–¢–∞–∫–∂–µ –¥–ª—è –±–µ—Å–µ–¥—ã –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª–∞—Å—Å ('
                                '–∫–æ–º–∞–Ω–¥–æ–π "!–∫–ª–∞—Å—Å <–∫–ª–∞—Å—Å>").\n–í –±–µ—Å–µ–¥–∞—Ö –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ–º–∞–Ω–¥—ã –≤–∏–¥–∞ '
                                '"11–ê", "5 –≥" –∏ —Ç.–¥.'
                                '\n\n'
                                ''
                                '‚åö –í –ª–∏—á–Ω—ã—Ö—Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–ª–µ –∫–ª–∞—Å—Å–∞, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, '
                                '—É–∫–∞–∑–∞—Ç—å –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É (—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ)\n'
                                '–ù–∞–ø—Ä–∏–º–µ—Ä - "5–ê, 5.10" –∏–ª–∏ "11–∞, '
                                '7.10"\n–ù–∞–ª–∏—á–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ '
                                '–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–µ–Ω—è\n\n'
                                ''
                                'üöÆ –ï—Å–ª–∏ —É –≤–∞—Å –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º '
                                '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π "!—Ä–µ–ø–æ—Ä—Ç", '
                                '–ª–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º @siailya(–º–Ω–µ –≤ –õ–°)\n\n'
                                ''
                                'üîë===== –î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã =====\n\n'
                                ''
                                'üìö !–∫–ª–∞—Å—Å - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–ª–∞—Å—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                                '\n(–∫–æ–º–∞–Ω–¥—ã "!–∫–ª–∞—Å—Å 0" –∏ "!–∫–ª–∞—Å—Å —Å–±—Ä–æ—Å" '
                                '—Å–±—Ä–∞—Å—ã–≤–∞—é—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å)\n'
                                '–ù–∞–ø—Ä–∏–º–µ—Ä: !–∫–ª–∞—Å—Å 8–≤\n\n'
                                ''
                                'üìÉ !—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã–±—Ä–∞–ª–∏ '
                                '–ø—Ä–µ–¥—ã–¥—É—â–µ–π –∫–æ–º–∞–Ω–¥–æ–π (–ª–∏–±–æ –ø–æ–ª–Ω–æ–µ, –µ—Å–ª–∏ –∫–ª–∞—Å—Å –Ω–µ –ø—Ä–∏—Å–≤–æ–µ–Ω)\n\n'
                                ''
                                'üåê !–ø–æ–ª–Ω–æ–µ - –æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç '
                                '–≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—Ä–æ—Å–∞\n\n'
                                ''
                                'üìù !—Ä–µ–ø–æ—Ä—Ç - —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ, –≤—ã–∑–≤–∞–Ω–Ω–æ–π –∏–º–µ–Ω–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–π '
                                '—Ä–∞–±–æ—Ç–æ–π –ë–æ—Ç–∞\n '
                                '–ù–∞–ø—Ä–∏–º–µ—Ä: !—Ä–µ–ø–æ—Ä—Ç –¥–æ–ª–≥–æ –∏–¥—É—Ç —Å–æ–æ–±—â–µ–Ω–∏—è\n\n'
                                ''
                                'üìÖ !–¥–∞—Ç—ã - —Å–ø–∏—Å–æ–∫ –¥–∞—Ç –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å '
                                '—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è')

        if '!–ö–õ–ê–°–°' in msg:
            a = True
            try:
                cls = msg.split(' ', maxsplit=1)[1].replace(' ', '').replace('"', '')
            except BaseException:
                self.send_msg(p_id, f'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –≤–∏–¥–µ "!–∫–ª–∞—Å—Å '
                                    f'<–Ω–æ–º–µ—Ä>" (–ü–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)')
                cls = ''
                a = False
            if cls in self.classes and a:
                self.usr_cls.update({p_id: cls})
                self.send_msg(p_id, f'–í–∞–º –ø—Ä–∏—Å–≤–æ–µ–Ω {cls} –∫–ª–∞—Å—Å.\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å '
                                    f'–∫–æ–º–∞–Ω–¥—É "!—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞.')
                with open('data/classes.pickle', 'wb') as fi:
                    dump(self.usr_cls, fi)
            elif cls in ['0', '–°–ë–†–û–°'] and a:
                try:
                    c = self.usr_cls.pop(p_id)
                    self.send_msg(p_id, f'–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç {c} –∫–ª–∞—Å—Å–∞!')
                    with open('data/classes.pickle', 'wb') as fi:
                        dump(self.usr_cls, fi)
                        self.send_msg(2000000002, '‚ôª –ë–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ!')
                except BaseException:
                    self.send_msg(p_id, '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '
                                        '–∫–æ–º–∞–Ω–¥—É "!–∫–ª–∞—Å—Å <–Ω–æ–º–µ—Ä>" (–ü–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)')
            elif a:
                self.send_msg(p_id, f'–ù–µ –±—ã–≤–∞–µ—Ç –∫–ª–∞—Å—Å–∞ {cls}! –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å –º–æ–µ–π —Å—Ç–æ—Ä–æ–Ω—ã, '
                                    f'–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π "!—Ä–µ–ø–æ—Ä—Ç" –∏ –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É.')

        if '!–†–ê–°–ü–ò–°–ê–ù–ò–ï' in msg:
            if p_id in self.usr_cls.keys():
                date = get_date()
                if path.exists(f'{date}/{self.usr_cls[p_id]}.jpg'):
                    self.photo(p_id, f'{date}/{self.usr_cls[p_id]}.jpg')
                else:
                    self.send_msg(p_id, '–ü—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–∫–∞—á–∞—Ç—å...\n–ï—Å–ª–∏ –≤—ã –∂–¥–µ—Ç–µ '
                                        '–±–æ–ª—å—à–µ 5 —Å–µ–∫—É–Ω–¥, —Ç–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –≤—Å–µ –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É!')
                    SF('all', date)
                    self.photo(p_id, f'{date}/{self.usr_cls[p_id]}.jpg')
            else:
                date = get_date()
                self.send_msg(p_id, f'–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∫–ª–∞—Å—Å, –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:')
                get_picture(get_date(), '1')
                self.photo(p_id, f'source/{date}.png')

        elif msg == '!–î–ê–¢–´':
            d = ''
            mnt = pendulum.now().month
            yr = pendulum.now().year
            for i in range(32):
                if i >= 10:
                    a = str(i) + '.' + str(mnt) + '.' + str(yr)
                else:
                    a = '0' + str(i) + '.' + str(mnt) + '.' + str(yr)
                if path.exists(get_date(a)):
                    d += a + '\n'
                else:
                    pass
            if d:
                d = '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü: \n' + d + '\n –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, ' \
                                                                     '–¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è ' \
                                                                     '–∑–∞–ø—Ä–æ—Å–∞ –ø–æ –∫–ª–∞—Å—Å—É üòí (' \
                                                                     '–ù–∞–ø—Ä–∏–º–µ—Ä, "11–∞, 5.10". –ù–µ ' \
                                                                     '—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–µ—Å–µ–¥–∞—Ö!)'
                self.send_msg(p_id, d)
            else:
                self.send_msg(p_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ª–∏–±–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç! üò∞')

        elif '!–ü–û–õ–ù–û–ï' in msg:
            date = get_date()
            get_picture(date, '1')
            self.photo(p_id, f'source/{date}.png')

        elif '!–†–ï–ü–û–†–¢' in msg:
            if p_id < 2000000000:
                name, last = self.u_get(p_id)
                rep = f'‚ö† –û—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ –æ—Ç @id{p_id}({name} {last})\n' + event.obj.text[8:]
                self.send_msg(2000000002, rep)
                self.send_msg(p_id, '–†–µ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')
            else:
                self.send_msg(p_id, '–†–µ–ø–æ—Ä—Ç—ã –æ—Ç –±–µ—Å–µ–¥ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!')

        elif '!–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò' in msg and p_id == 2000000002:
            u = '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n'

            k = 'data/base.pickle'
            with open(k, 'wb') as fi:
                dump(self.usrs, fi)
            with open(k, 'rb') as f:
                self.usrs = load(f)
            for i in self.usrs:
                name, last = self.u_get(i)
                u += f'@id{i}({name} {last})\n'

            p = 'data/classes.pickle'
            with open(p, 'wb') as fi:
                dump(self.usr_cls, fi)
            with open(p, 'rb') as f:
                self.usr_cls = load(f)
            u += '\n\n–°–ø–∏—Å–æ–∫ –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤:\n'
            for i in self.usr_cls.keys():
                if i < 2000000000:
                    name, last = self.u_get(i)
                    u += f'@id{i}({name} {last}) - {self.usr_cls[i]}\n'
                else:
                    u += f'–ë–µ—Å–µ–¥–∞ {i} - {self.usr_cls[i]}\n'
            print('\n' + u)
            self.send_msg(2000000002, u)


if __name__ == "__main__":
    print('Version 1.3.4B')
    if not path.exists(get_date()):
        print('Loading schedules for current date')
        SF()
        print('Loaded!')
    else:
        print()
    print('====== Work started ======')
    Bot().send_msg(2000000002, f'–ó–∞–ø—É—â–µ–Ω!')
    e = 0
    while e <= 300:
        try:
            Bot().main()
        except BaseException as ex:
            e += 1
            Bot().send_msg(2000000002, f'üÜò Exception: {ex} <count: {e} >')
